name: Build USD

on:
  push:
    branches:
      - release
      - dev

jobs:
  Linux:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y python3-setuptools libglew-dev libxrandr-dev libxcursor-dev libxinerama-dev libxi-dev
          sudo pip install --upgrade pip
          sudo pip install PySide2 PyOpenGL

      - name: Build USD
        run: |
          python3 build_scripts/build_usd.py --no-materialx --build $HOME/USDgen/build --src $HOME/USDgen/src $HOME/USDinst -v

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            $HOME/USDgen/build
          key: ${{ runner.os }}-pip-build-dependencies

  Invalidate_Cache_Linux:
    needs: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Invalidate cache
        run: |
          echo "::set-output name=cache-key::${{ runner.os }}-pip-build-dependencies-${{ github.sha }}"

#  macOS:
    #runs-on: macos-12
    #timeout-minutes: 120
    #steps:
      #- name: Checkout code
        #uses: actions/checkout@v2

      #- name: Install dependencies
        #run: |
          #export PATH=/Library/Frameworks/Python.framework/Versions/3.11/bin:$PATH
          #sudo xcode-select -s /Applications/Xcode_13.3.app/Contents/Developer
          #export SYSTEM_VERSION_COMPAT=1
          #sudo pip3 install PySide6 PyOpenGL setuptools
          #export -n SYSTEM_VERSION_COMPAT

      #- name: Build USD
        #run: |
          #python3 build_scripts/build_usd.py --no-materialx --generator Xcode --build $HOME/USDgen/build --src $HOME/USDgen/src $HOME/USDinst -v

  #Windows:
    #runs-on: windows-2019
    #timeout-minutes: 120
    #steps:
      #- name: Checkout code
        #uses: actions/checkout@v2

      #- name: Install Python and dependencies
        #uses: actions/setup-python@v2
        #with:
          #python-version: '3.7'
      #- name: Install dependencies
        #run: |
          #python -m pip install --upgrade pip
          #python -m pip install PySide2 PyOpenGL

      #- name: Build USD
        #run: |
          #python build_scripts/build_usd.py --no-materialx --generator "Visual Studio 16 2019" --build %HOME%/USDgen/build --src %HOME%/USDgen/src %HOME%/USDinst --build-args USD,"-DPXR_ENABLE_PRECOMPILED_HEADERS=OFF" -v
